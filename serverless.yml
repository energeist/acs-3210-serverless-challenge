org: energeist
app: serverless-challenge
# serverless.yml
 
service: serverless-challenge

plugins:
  - serverless-dynamodb-local
  - serverless-offline
 
custom:
  usersTableName: 'users-table-${self:provider.stage}'
  pokemonTableName: 'pokemon-table-${self:provider.stage}'
  dynamodb:
    start:
      migrate: true
 
provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
        - { "Fn::GetAtt": ["PokemonDynamoDBTable", "Arn" ] }
  environment:
    USERS_TABLE: ${self:custom.usersTableName}
    POKEMON_TABLE: ${self:custom.pokemonTableName}
	
	
functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
  getUser:
    handler: index.handler
    events:
      - http: 'GET /users/{proxy+}'
  createUser:
    handler: index.handler
    events:
      - http: 'POST /users'
  getPokemon:
    handler: index.handler
    events:
      - http: 'GET /pokemon/{proxy+}'
  createPokemon:
    handler: index.handler
    events:
      - http: 'POST /pokemon'
  roll:
    handler: index.handler
    events:
      - http: 'GET /roll'
 
resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.usersTableName}
    PokemonDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: pokemonName
            AttributeType: S
        KeySchema:
          -
            AttributeName: pokemonName
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.pokemonTableName}